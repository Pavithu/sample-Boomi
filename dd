name: UpdateExtensions

on: [push, pull_request]

jobs:
  build:
    name: "UpdateExtensions"
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v3
      - name: Read json file
        run: |
            cd /home/runner/work/aiid205223-sample-Boomi-CICD/aiid205223-sample-Boomi-CICD/JAN2024CE/QA/UpdateExtensions/
	        ls
	  - name: List files
	    run: |
          for file in $(find . -type f); do
            echo "Found file: $file"
            cat Packaged_Component.json
            pckg+=$(jq -r '.[].packagedComponentId' Packaged_Component.json)
            echo $pckg
          for i in $pckg; do
            echo "Value: https://api.boomi.com/api/rest/v1/thomsonreuterscorp-KI9H39/DeployedPackage/$i"
            curl --location --request POST \
             --header "Authorization: Basic ${{ secrets.AUTH_SECRET }}" \
             -H "Content-Type: application/json" \
             https://api.boomi.com/api/rest/v1/thomsonreuters-AWQVQI/EnvironmentExtensions/update
             done

name: List Files

on: [push]  # Run on push events (you can change this trigger)

jobs:
  list-files:
    runs-on: ubuntu-latest  # You can choose a different runner OS

    steps:
      - uses: actions/checkout@v3
      - name: List files in a directory
        run: |
          cd path/to/your/directory  # Replace with the actual path to your directory
          ls -l  # Use ls -l to get detailed listing (optional)

file_array=()
          for file in $(find . -type f); do
            file_array+=("$file")
          done
          echo "Filenames in an array:"
          echo "${file_array[@]}"


| cut -d '.' -f 1

found=false
for f in "$[file_array[@]}"; do
  if [[ "$f" == "$file" ]]; then
    found=true
    break
  fi
done
if [["$found" == false ]]; then
  continue
fi


name: List Files

on: [push]  

jobs:
  list-files:
    runs-on: ubuntu-latest 

    steps:
      - uses: actions/checkout@v3
      - name: List files in a directory
        run: |
          cd /home/runner/work/aiid205223-sample-Boomi-CICD/aiid205223-sample-Boomi-CICD/JAN2024CE/QA/UpdateExtensions/
          file_array=()
          for file in $(ls | cut -d '.' -f 1); do
            file_array+=("$file")
          done
          echo "Filenames in an array:"
          echo "${file_array[@]}"
          cd /home/runner/work/aiid205223-sample-Boomi-CICD/aiid205223-sample-Boomi-CICD/JAN2024CE/PROD/Deploy/
          for file in $(find . -type f); do
            echo "Found file: $file"
            found=false
            for f in "${file_array[@]}"; do
              if [[ "$f" == "$file" ]]; then
                found=true
              fi
            done
            if [["$found" == false ]]; then
              continue
            fi
            pckg+=$(jq -r '.[].packagedComponentId' Packaged_Component.json)
            echo $pckg
            for i in $pckg; do
              echo "Value: https://api.boomi.com/api/rest/v1/thomsonreuterscorp-KI9H39/DeployedPackage/$i"
              curl --location --request POST \
                --header "Authorization: Basic ${{ secrets.AUTH_SECRET }}" \
                -H "Content-Type: application/json" \
                https://api.boomi.com/api/rest/v1/thomsonreuters-AWQVQI/EnvironmentExtensions/update
            done
          done


json=$(cat data.json)

for item in $(echo "${json}" | jq -r '.[]'); do
    name=$(echo "${item}" | jq -r '.name')
    echo "Name: $name"
done
          
          
[
	{
		"packagedComponentId": "32fsdfda-57f4-47c8-b861-bf60ee85621c",
		"changeNumber": "CHG344432",
		"ADONumber": "423423",
		"testPackageId": "GetAccountService_Collection1.0"
	},
	{
		"packagedComponentId": "765hfgg-57f4-47c8-b861-bf60ee85621c",
		"changeNumber": "CHG344436",
		"ADONumber": "565544",
		"testPackageId": "GetOrderService_Collection1.0"
	},
	{
		"packagedComponentId": "09678cvb-57f4-47c8-b861-bf60ee85621c",
		"changeNumber": "CHG3443232",
		"ADONumber": "876876",
		"testPackageId": "GetCustomerService_Collection1.0"
	},
	{
		"packagedComponentId": "23423dfgd-57f4-47c8-b861-bf60ee85621c",
		"changeNumber": "CHG67876856",
		"ADONumber": "87635654",
		"testPackageId": "GetPaymentService_Collection1.0"
	}
]          

#!/bin/bash
my_array=(32fsdfda-57f4-47c8-b861-bf60ee85621c 765hfgg-57f4-47c8-b861-bf60ee85621c 09678cvb-57f4-47c8-b861-bf60ee85621c)
#readarray -t pack_array < <(jq -r '.[].packagedComponentId' /c/Users/selva/Downloads/data.json)
pack_array=($(jq -r '.[].packagedComponentId' /c/Users/selva/Downloads/data.json))

#final_array=()

for packagedComponentId  in "${pack_array[@]}"; do
    output=""
    for value in "${my_array[@]}"; do
	#echo "$packagedComponentId"
	#echo "and"
	#echo "$value"
	if [ "$packagedComponentId" == "$value" ]; then
	    output="value found"
	    break
        fi
    done
    if [ "$output" != "value found" ]; then
	    echo "$packagedComponentId"
	    echo "not deployed"
    fi
done



name: List Files

on: [push]  

jobs:
  list-files:
    runs-on: ubuntu-latest 

    steps:
      - uses: actions/checkout@v3
      - name: List files in a directory
        run: |
          cd /home/runner/work/aiid205223-sample-Boomi-CICD/aiid205223-sample-Boomi-CICD/JAN2024CE/QA/UpdateExtensions/
          file_array=()
          for file in $(ls | cut -d '.' -f 1); do
            file_array+=("$file")
          done
            echo "Filenames in an array:"
            echo "${file_array[@]}"
          cd /home/runner/work/aiid205223-sample-Boomi-CICD/aiid205223-sample-Boomi-CICD/JAN2024CE/QA/Deploy/
          pack_array=($(jq -r '.[].packagedComponentId'))
            echo "files in pack_array : $pack_array  

          pckg+=$(jq -r '.[].packagedComponentId' Packaged_Component.json)
            echo $pckg
            for i in $pckg; do
              echo "Value: https://api.boomi.com/api/rest/v1/thomsonreuterscorp-KI9H39/DeployedPackage/$i"
              curl --location --request POST \
                --header "Authorization: Basic ${{ secrets.AUTH_SECRET }}" \
                -H "Content-Type: application/json" \
                https://api.boomi.com/api/rest/v1/thomsonreuters-AWQVQI/EnvironmentExtensions/update
            done
          
          name: List Files

on: [push]  

jobs:
  list-files:
    runs-on: ubuntu-latest 

    steps:
      - uses: actions/checkout@v3
      - name: List files in a directory
        run: |
          cd /home/runner/work/aiid205223-sample-Boomi-CICD/aiid205223-sample-Boomi-CICD/JAN2024CE/QA/UpdateExtensions/
          file_array=()
          for file in $(ls | cut -d '.' -f 1); do
            file_array+=("$file")
          done
            echo "Filenames in an array:"
            echo "${file_array[@]}"
          cd /home/runner/work/aiid205223-sample-Boomi-CICD/aiid205223-sample-Boomi-CICD/JAN2024CE/QA/Deploy/
          echo "Deploy Packaged Component Id"
          cat Packaged_Component.json
          pckg+=$(jq -r '.[].PackagedComponent' Packaged_Component.json)
          echo "$pckg" 

    for filename in "${file_array[@]}"; do
    if [[ "$pckg" == "$filename" ]]; then
        echo "$filename is present in PackagedComponent IDs."
    else
        echo "$filename is not present in PackagedComponent IDs."
    fi
done       
          
          
for filename in "${file_array[@]}"; do
        if [[ "$pckg" == "$filename" ]]; then
            found=true
            break
        fi
    done
    if $found; then
        echo "$pckg is present in the file array."
    else
        echo "$pckg is not present in the file array."
    fi


for pckg_file in $pckg; do
    found=false


for packagedComponentId in "${pack_array[@]}"; do
    output="not deployed"  # Initialize output variable

    # Loop through each value in my_array
    for value in "${File_array[@]}"; do
        # Compare packagedComponentId with value
        if [ "$packagedComponentId" == "$value" ]; then
            output=""  # If match found, clear output
            break      # Break out of inner loop
        fi
    done

    # If output is still "not deployed", print packagedComponentId not deployed
    if [ -n "$output" ]; then
        echo "$packagedComponentId not deployed"
    fi
done



# Assuming $pckg is the value you want to check and $file_array is the array containing values
found=false

# Iterate over the elements of the array
for filename in "${file_array[@]}"; do
    if [[ "$pckg" == "$filename" ]]; then
        found=true
        break
    fi
done

# Check if the value was found
if [[ $found == true ]]; then
    echo "$pckg is present in the file array."
else
    echo "$pckg is not present in the file array."
fi



found=false
          for packagedComponentId in "${pckg[@]}"; do
            if [[ "$file_array" == "$packagedComponentId" ]]; then
                found=true
                break
            fi
            if [[ $found == true ]]; then
              echo "$pckg is present in the file array."
            else
              echo "$pckg is not present in the file array."
            fi


match_found=false
          for file in "${file_array[@]}"; do
            for component in $pckg; do
              if [ "$file" == "$component" ]; then
                echo "Match found: $component"
                match_found=true
              fi
            done
          done
          
          if [ "$match_found" == false ]; then
            echo "No value found"
          fi


name: List Files 

on: [push]  

jobs:
  list-files:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: List files in a directory 
        run: |
          cd /home/runner/work/aiid205223-sample-Boomi-CICD/aiid205223-sample-Boomi-CICD/JAN2024CE/QA/UpdateExtensions/
          file_array=()
          for file in $(ls | cut -d '.' -f 1); do
            file_array+=("$file")
          done
            echo "Filenames in an array:"
            echo "${file_array[@]}"
          cd /home/runner/work/aiid205223-sample-Boomi-CICD/aiid205223-sample-Boomi-CICD/JAN2024CE/QA/Deploy/
          echo "Deploy Packaged Component Id"
          cat Packaged_Component.json
          pckg+=$(jq -r '.[].packagedComponentId' Packaged_Component.json)
           

          value_found=false
          for file in "${file_array[@]}"; do
            for component in $pckg; do
              if [ "$file" == "$component" ]; then
                 echo "value found: $component"
                 value_found=true
              fi
             done
          if [ "$value_found" == false ]; then 
            echo "No value found"
          fi


found_values=()  # New array to store found values

          for file in "${file_array[@]}"; do
            for component in $pckg; do
              if [ "$file" == "$component" ]; then
                echo "value found: $component"
                found_values+=("$component")  # Append found value to array
              fi
            done
          done


echo "Found values:"
          for value in "${found_values[@]}"; do
            echo "$value"
          done


echo "Comparing found values with files in UpdateExtensions directory:"
          for found_value in "${found_values[@]}"; do
            if [ -f "/home/runner/work/aiid205223-sample-Boomi-CICD/aiid205223-sample-Boomi-CICD/JAN2024CE/QA/UpdateExtensions/${found_value}.json" ]; then
              echo "File ${found_value}.json found."
            else
              echo "File ${found_value}.json not found."
            fi
          done




{
	"@type": "EnvironmentExtensions",
    "processProperties": {
        "@type": "OverrideProcessProperties",
        "ProcessProperty": [
            {
                "@type": "OverrideProcessProperty",
                "ProcessPropertyValue": [
                    {
                        "@type": "ProcessPropertyValue",
                        "key": "20eae6e4-57f4-47c8-b861-bf60ee85621c",
                        "value": "Partialupdates6"
                    },
                    {
                        "@type": "ProcessPropertyValue",
                        "key": "20eae6e4-57f4-47c8-b861-bf60ee85621c",
                        "value": "Partialupdates7"
                    },
                    {
                        "@type": "ProcessPropertyValue",
                        "key": "20eae6e4-57f4-47c8-b861-bf60ee85621c",
                        "value": "Partialupdates8"
                    }
                ],
                "id": "5da53fa0-5e19-40df-99f7-5a54f2148c90",
                "name": "JWT OLC CREATE"
            }
        ]
    },
    "connections": {
        "@type": "Connections",
        "connection": [
            {
                "@type": "Connection",
                "field": [
                    {
                        "@type": "Field",
                        "id": "url",
                        "encryptedValueSet": false,
                        "usesEncryption": false,
                        "value": "${GITHUB_Proview_URL}"
                    },
                    {
                        "@type": "Field",
                        "id": "password",
                        "encryptedValueSet": false,
                        "usesEncryption": false,
                        "value": "${GITHUB_SECRET}"
                    }
                ],
                "id": "903fbe2f-3e17-437a-9d3f-653f879b8a37",
                "name": "Proview_Instance_Connection_QA_COMMON"
            }
        ]
    },
    "properties": {
        "property": [
            {
                "@type": "",
                "name": "DPP_Sample",
                "value": "Hello"
            }
        ]
    }
}
